##############################
#          apache2           #
##############################

# add last apache2 version repository
sudo add-apt-repository ppa:ondrej/apache2

# install
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install apache2

##############################
#            mysql           #
##############################

# install
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install mysql-server libapache2-mod-auth-mysql php5-mysql
# password project1234

# install db
sudo mysql_install_db

# deploy
sudo /usr/bin/mysql_secure_installation

##############################
#             php            #
##############################

# add last php version repository
sudo add-apt-repository ppa:ondrej/php5

# install
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install php5 libapache2-mod-php5 php5-mcrypt php5-curl

# configure extension priority
sudo nano /etc/apache2/mods-enabled/dir.conf

# set index.php as firs option

# restart apache to init php
sudo service apache2 restart

# change root directory owner in order to avoid permission conflicts between user and apache
sudo chown -R $user:$user /var/www

# change display errors options
sudo geany /etc/php5/apache2/php.ini 


##############################
#          composer          #
##############################

# install
curl -sS https://getcomposer.org/installer | php

# If the above fails for some reason, you can download the installer with php instead:
# php -r "readfile('https://getcomposer.org/installer');" | php

# move to global path - it allows invoke composer anywhere
sudo mv composer.phar /usr/local/bin/composer

# change owner in order to avoid change the binary
sudo chown root:root /usr/local/bin/composer

# install dependencies (it can take several minutes)
composer update --no-scripts



##############################
#           xdebug           #
##############################

sudo apt-get install php5-dev php-pear

sudo pecl install php-xdebug

# add to php.ini
# '20121212' can change depending on OS version

[xdebug] ; php debugger

zend_extension = "/usr/lib/php5/20121212/xdebug.so"

xdebug.remote_enable  = on
xdebug.remote_handler = dbgp
xdebug.remote_mode    = req
xdebug.remote_host    = localhost
xdebug.remote_port    = 9090

# restart apache

# secure php_info() shows:
# This program makes use of the Zend Scripting Language Engine:
# Zend Engine v2.5.0, Copyright (c) 1998-2014 Zend Technologies
#     with Xdebug v2.2.5, Copyright (c) 2002-2014, by Derick Rethans
#     with Zend OPcache v7.0.4-dev, Copyright (c) 1999-2014, by Zend Technologies

##############################
#           Aptana           #
##############################


# PHP interpreter
name: PHP5.5
Executable path: /usr/bin/php
PHP init file: /etc/php5/apache2/php.ini

# create new PHP server, with following data:
Name: localhost
Base URL: http://localhost
Document Root: /var/www


##############################
#           laravel          #
##############################

#install laravel-installer

sudo composer global require "laravel/installer=~1.1"

#create proyect
sudo composer create-project laravel/laravel project-name --prefer-dist

#change permmission
sudo chmod 774 -R project-name/

#change owner
sudo chown desarrollo:desarrollo -R project-name/








